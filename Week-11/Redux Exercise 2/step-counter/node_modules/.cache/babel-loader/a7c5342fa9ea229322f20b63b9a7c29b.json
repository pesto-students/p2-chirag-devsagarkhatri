{"ast":null,"code":"const counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    count: 1\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"INCREMENT\":\n      return { ...state,\n        count: state.count + 1\n      };\n\n    case \"RESET\":\n      return { ...state,\n        count: 0\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default counterReducer;","map":{"version":3,"names":["counterReducer","state","count","action","type"],"sources":["D:/React Projects/pesto/Week11/Redux Exercise 2/step-counter/src/redux/reducers/counterReducer.js"],"sourcesContent":["const counterReducer = (state = {count:1}, action) => {\r\n    switch (action.type) {\r\n      case \"INCREMENT\":\r\n        return {\r\n            ...state,\r\n            count:state.count + 1\r\n        }\r\n      case \"RESET\":\r\n        return {\r\n            ...state,\r\n            count : 0\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n  };\r\n  export default counterReducer;"],"mappings":"AAAA,MAAMA,cAAc,GAAG,YAA+B;EAAA,IAA9BC,KAA8B,uEAAtB;IAACC,KAAK,EAAC;EAAP,CAAsB;EAAA,IAAXC,MAAW;;EAClD,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,WAAL;MACE,OAAO,EACH,GAAGH,KADA;QAEHC,KAAK,EAACD,KAAK,CAACC,KAAN,GAAc;MAFjB,CAAP;;IAIF,KAAK,OAAL;MACE,OAAO,EACH,GAAGD,KADA;QAEHC,KAAK,EAAG;MAFL,CAAP;;IAIF;MACE,OAAOD,KAAP;EAZJ;AAcD,CAfH;;AAgBE,eAAeD,cAAf"},"metadata":{},"sourceType":"module"}